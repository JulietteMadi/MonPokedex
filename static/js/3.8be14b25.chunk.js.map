{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","pages/Home/Home.style.tsx","components/Pokemon/Pokemon.tsx","pages/Home/Home.tsx","pages/Home/index.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","Home_style","Intro","styled","div","_templateObject","Pokemon","props","react","name","id","src","concat","Home","_useState2","useState","pokemonResearchInputValue","setPokemonResearchInputValue","pokemonListState","pokemonName","pokemonId","pokemonList","setPokemonList","useEffect","limit","offset","Number","parseInt","makeGetRequest","then","response","formattedPokemonList","body","results","map","_ref","url","split","react_default","a","createElement","onChange","event","target","_ref2","components_Pokemon_Pokemon","key","__webpack_require__","d","__webpack_exports__","pages_Home_Home"],"mappings":"0FAGe,SAAAA,EAAAC,EAAAC,GACf,OCJe,SAAAD,GACf,GAAAE,MAAAC,QAAAH,GAAA,OAAAA,EDGSI,CAAcJ,IEJR,SAAAA,EAAAC,GACf,IAAAI,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAX,EAAAY,OAAAC,cAA6CP,GAAAI,EAAAC,EAAAG,QAAAC,QAC7CV,EAAAW,KAAAN,EAAAO,QAEAhB,GAAAI,EAAAa,SAAAjB,GAH4EK,GAAA,IAKzE,MAAAa,GACHZ,GAAA,EACAC,EAAAW,EACG,QACH,IACAb,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EFnBgCe,CAAoBpB,EAAAC,IGJrC,WACf,UAAAoB,UAAA,wDHGgEC,oOIFjD,IAAAC,EAAA,CACbC,YAAOC,EAAOC,IAATC,MCwBQC,EAvBC,SAACC,GACb,OACIC,EAAA,cAACP,EAAMC,MAAP,KACIM,EAAA,6BAAOD,EAAME,KAAb,KACAD,EAAA,6BAAOD,EAAMG,GAAb,KACAF,EAAA,qBAAKG,IAAG,4EAAAC,OAA8EL,EAAMG,GAApF,qBC0DLG,EAvDF,WAAM,IAAAC,EAAArC,EAEiDsC,mBAAS,IAF1D,GAEVC,EAFUF,EAAA,GAEiBG,EAFjBH,EAAA,GAGXI,EAAmBH,mBAAS,CAEhC,CACEI,YAAa,YACbC,UAAW,GAEb,CACED,YAAa,UACbC,UAAW,GAEb,CACED,YAAa,WACbC,UAAW,KAGTC,EAAcH,EAAiB,GAC/BI,EAAiBJ,EAAiB,GAExCK,oBAAU,WACR,IAAMC,EAA6C,IAArCR,EAA0BpB,OAAe,IAAM,EACvD6B,EAA8C,IAArCT,EAA0BpB,OAAe,EAAI8B,OAAOC,SAASX,GAA6B,EACzGY,YAAc,2CAAAhB,OAA4CY,EAA5C,YAAAZ,OAA4Da,IACvEI,KAAK,SAACC,GACL,IACMC,EADWD,EAASE,KAAKC,QACOC,IAAI,SAAAC,GAAkD,IAA/C1B,EAA+C0B,EAA/C1B,KAAM2B,EAAyCD,EAAzCC,IACjD,MAAO,CACLjB,YAAaV,EACbW,UAAWM,OAAOC,SAASS,EAAIC,MAAM,KAAK,OAG9Cf,EAAeS,MAElB,CAACf,IAQJ,OACEsB,EAAAC,EAAAC,cAACvC,EAAMC,MAAP,KACEoC,EAAAC,EAAAC,cAAA,SAAOC,SANW,SAACC,GACrBzB,EAA6ByB,EAAMC,OAAOhD,QAKRA,MAAOqB,IACtCK,EAAYa,IAAI,SAAAU,GAA6C,IAA1CzB,EAA0CyB,EAA1CzB,YAAaC,EAA6BwB,EAA7BxB,UAC/B,OACEkB,EAAAC,EAAAC,cAACK,EAAD,CAASpC,KAAMU,EAAaT,GAAIU,EAAW0B,IAAK1B,QC5D1D2B,EAAAC,EAAAC,EAAA,4BAAAC","file":"static/js/3.8be14b25.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import styled from 'styled-components';\n\nexport default {\n  Intro: styled.div`\n    font-size: 20px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    padding: 10px;\n  `,\n};\n","import * as React from 'react';\n\nimport Style from '../../pages/Home/Home.style'\n\nconst Pokemon = (props: any) => {\n    return (\n        <Style.Intro>\n            <div> {props.name} </div>\n            <div> {props.id} </div>\n            <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.id}.png`}></img>\n        </Style.Intro>\n    )\n}\n\n// class Pokemon extends React.Component {\n//     render(): React.ReactNode {\n//         const name = 'Carapuce';\n//         const id = '7'\n//         return (\n//             <Style.Intro>\n//                 <div> {name} </div>\n//                 <div> {id} </div>\n//                 <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}></img>\n//             </Style.Intro>\n//         )\n//     }\n// }\nexport default Pokemon;\n","import React, { useEffect, useState } from 'react';\n\nimport Style from './Home.style';\nimport Pokemon from 'components/Pokemon';\nimport { makeGetRequest } from '../../services/networking/request';\nimport { FormattedMessage } from 'react-intl'\n\ntype PokemonType = {\n  pokemonName: string,\n  pokemonId: number,\n}\n\nconst Home = () => {\n\n  const [pokemonResearchInputValue, setPokemonResearchInputValue] = useState('');\n  const pokemonListState = useState([\n    // Pour un affichage sympa et plus rapide en cas de réseau lent\n    {\n      pokemonName: 'bulbasaur',\n      pokemonId: 1,\n    },\n    {\n      pokemonName: 'ivysaur',\n      pokemonId: 2,\n    },\n    {\n      pokemonName: 'venusaur',\n      pokemonId: 3,\n    },\n  ] as PokemonType[]);\n  const pokemonList = pokemonListState[0];\n  const setPokemonList = pokemonListState[1];\n\n  useEffect(() => {\n    const limit = pokemonResearchInputValue.length === 0 ? 151 : 1;\n    const offset = pokemonResearchInputValue.length === 0 ? 0 : Number.parseInt(pokemonResearchInputValue) - 1;\n    makeGetRequest(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`)\n      .then((response) => {\n        const pokeList = response.body.results;\n        const formattedPokemonList = pokeList.map(({ name, url }: { name: string, url: string }) => {\n          return {\n            pokemonName: name,\n            pokemonId: Number.parseInt(url.split('/')[6])\n          }\n        })\n        setPokemonList(formattedPokemonList);\n      })\n  }, [pokemonResearchInputValue]);\n\n  // Cette fonction réagit à un évènement de modification de l'input\n  // et stocke la nouvelle valeur dans pokemonResearchInputValue\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPokemonResearchInputValue(event.target.value);\n  };\n\n  return (\n    <Style.Intro>\n      <input onChange={onInputChange} value={pokemonResearchInputValue} />\n      {pokemonList.map(({ pokemonName, pokemonId }: PokemonType) => {\n        return (\n          <Pokemon name={pokemonName} id={pokemonId} key={pokemonId} />\n        )\n      })}\n    </Style.Intro>\n  );\n}\n\nexport default Home;\n","export { default } from './Home';\n"],"sourceRoot":""}